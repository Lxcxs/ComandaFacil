generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int       @id @default(autoincrement())
  userName     String
  userEmail    String    @unique(map: "User_userEmail_key")
  userPassword String
  userDocument String    @unique(map: "User_userDocument_key")
  accountType  String
  createdAt    DateTime? @default(now())
  store        store[]
}

model waiter {
  id             Int     @id @default(autoincrement())
  waiterName     String
  waiterEmail    String  @unique()
  waiterPassword String
  accountType    String
  storeId        Int
  orders         order[]
  tables         table[]
  store          store   @relation(fields: [storeId], references: [id])
}

model store {
  id               Int           @id @default(autoincrement())
  storeName        String
  storeStatus      String
  storeImage       String
  storeTableAmount Int
  userId           Int
  categories       category[]
  costumers        costumer[]
  items            item[]
  orders           order[]
  tables           table[]
  storeTabs        costumerTab[]
  waiters          waiter[]
  user             user          @relation(fields: [userId], references: [id])
}

model category {
  id           Int    @id @default(autoincrement())
  categoryName String
  storeId      Int
  item         item[]
  store        store  @relation(fields: [storeId], references: [id], map: "Category_storeId_fkey")

  @@index([storeId], map: "Category_storeId_fkey")
}

model item {
  id              Int      @id @default(autoincrement())
  itemName        String
  itemDescription String
  itemValue       Decimal  @db.Decimal(10, 2)
  itemStatus      String
  itemImage       String
  categoryId      Int
  storeId         Int
  category        category @relation(fields: [categoryId], references: [id], map: "Item_categoryId_fkey")
  store           store    @relation(fields: [storeId], references: [id], map: "Item_storeId_fkey")

  @@index([categoryId], map: "Item_categoryId_fkey")
  @@index([storeId], map: "Item_storeId_fkey")
}

model table {
  id                Int           @id @default(autoincrement())
  tableNumber       Int
  tableStatus       String
  tablePeopleAmount Int
  storeId           Int
  costumer          costumer[]
  order             order[]
  store             store         @relation(fields: [storeId], references: [id])
  waiter            waiter?       @relation(fields: [waiterId], references: [id])
  waiterId          Int?
  costumerTab       costumerTab[]
}

model costumer {
  id             Int           @id @default(autoincrement())
  costumerName   String
  costumerTable  Int
  accountType    String
  tableId        Int?
  storeId        Int
  costumerStatus String
  order          order[]
  tab            costumerTab[]
  table          table?        @relation(fields: [tableId], references: [id])
  store          store         @relation(fields: [storeId], references: [id], map: "Costumer_storeId_fkey")

  @@index([storeId], map: "Costumer_storeId_fkey")
}

model costumerTab {
  id         Int      @id @default(autoincrement())
  tabValue   Decimal  @db.Decimal(10, 2)
  tabStatus  String
  costumerId Int
  storeId    Int
  tableId    Int?
  orders     order[]
  table      table?   @relation(fields: [tableId], references: [id])
  costumer   costumer @relation(fields: [costumerId], references: [id])
  store      store    @relation(fields: [storeId], references: [id])
}

model order {
  id            Int          @id @default(autoincrement())
  itemName      String
  itemImage     String
  itemAmount    Int
  costumerNote  String
  orderValue    Decimal      @db.Decimal(10, 2)
  orderStatus   String
  createdAt     DateTime     @default(now())
  storeId       Int
  costumerId    Int
  tableId       Int?
  costumerTabId Int?
  costumer      costumer     @relation(fields: [costumerId], references: [id])
  table         table?       @relation(fields: [tableId], references: [id])
  store         store        @relation(fields: [storeId], references: [id])
  costumerTab   costumerTab? @relation(fields: [costumerTabId], references: [id])
  waiter        waiter?      @relation(fields: [waiterId], references: [id])
  waiterId      Int?

  @@index([costumerId], map: "order_costumerId_fkey")
  @@index([storeId], map: "order_storeId_fkey")
}
